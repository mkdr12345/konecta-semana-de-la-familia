{"version":3,"sources":["config/config.js","components/login.js","components/Users.js","components/User.js","components/Post.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","useState","email","setEmail","password","setPassword","undefined","firebase","auth","currentUser","className","type","placeholder","onChange","e","target","value","onClick","signInWithEmailAndPassword","catch","error","Users","users","setUsers","useEffect","firestore","collection","onSnapshot","snapshot","result","docs","map","doc","data","id","history","useHistory","columns","field","headerName","width","renderCell","params","Chip","icon","Check","label","color","variant","Clear","Button","push","pathname","row","style","height","marginTop","backgroundColor","rows","pageSize","column","disableClickEventBubbling","User","props","user","setUser","banReason","setBanReason","useLocation","posts","setPosts","match","exists","uid","valueGetter","Date","seconds","length","CircularProgress","size","thickness","Paper","elevation","alignItems","Avatar","alt","src","image","textAlign","name","username","fontWeight","Divider","banned","update","banDetails","TextField","defaultValue","multiline","inputMode","date","FieldValue","serverTimestamp","Post","post","setPost","comments","setComments","loaded","setLoaded","delete","creator","caption","toString","href","downloadURL","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","justifyContent","padding","mixins","content","flexGrow","Home","classes","useTheme","React","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","edge","Typography","noWrap","Drawer","paper","direction","List","text","index","ListItem","button","to","ListItemIcon","ListItemText","primary","path","exact","component","App","loggedIn","setLoggedIn","onAuthStateChanged","login","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","initializeApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.974c154e.chunk.js","sourcesContent":["export var firebaseConfig = {\n  apiKey: \"AIzaSyCk1ZtWs17sJek5RDb9q3lR9W3_955rjqg\",\n\n  authDomain: \"konecta-c6c83.firebaseapp.com\",\n\n  databaseURL: \"https://konecta-c6c83-default-rtdb.firebaseio.com\",\n\n  projectId: \"konecta-c6c83\",\n\n  storageBucket: \"konecta-c6c83.appspot.com\",\n\n  messagingSenderId: \"700282207106\",\n\n  appId: \"1:700282207106:web:f4b372ca47ea2f61e02d9b\"\n\n};","\nimport React, { Component, useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\n\nimport firebase from 'firebase'\n\n\nexport default function Login() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('')\n\n    const onSignIn = () => {\n        firebase.auth().signInWithEmailAndPassword(email, password).catch(function (error) {\n        });\n    }\n\n    if (firebase.auth().currentUser == undefined) {\n        return (\n\n            <div className=\"container vertical-center \">\n                <div className=\"auth-wrapper\">\n                    <div className=\"auth-inner\">\n                            <h3>Sign In</h3>\n\n                            <div className=\"form-group\">\n                                <label>Email address</label>\n                                <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\"\n                                    onChange={e => setEmail(e.target.value)}\n                                    value={email} />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\"\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)} />\n                            </div>\n\n                            <button className=\"btn btn-primary btn-block\" onClick={onSignIn}>Submit</button>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { useEffect, useState } from 'react'\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport { DataGrid } from '@material-ui/data-grid';\nimport Chip from '@material-ui/core/Chip';\nimport { Clear, Check } from '@material-ui/icons';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Users() {\n    const [users, setUsers] = useState([])\n    useEffect(() => {\n        firebase.firestore()\n            .collection(\"users\")\n\n            .onSnapshot((snapshot) => {\n                let result = snapshot.docs.map(doc => {\n                    const data = doc.data();\n                    const id = doc.id;\n                    return { id, ...data }\n                })\n                setUsers(result)\n            })\n    }, [])\n    const history = useHistory();\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 280 },\n        { field: 'name', headerName: 'Name', width: 130 },\n        { field: 'username', headerName: 'Username', width: 130 },\n        {\n            field: 'banned', headerName: 'banned', width: 150,\n            renderCell: (params) => (\n                <div>\n                    {params.value ?\n                        <Chip\n                            icon={<Check />}\n                            label=\"True\"\n                            color=\"primary\"\n                            variant=\"outlined\"\n                        />\n                        :\n                        <Chip\n                            icon={<Clear />}\n                            label=\"False\"\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                        />\n\n\n                    }\n                </div>\n\n            ),\n\n        },\n        {\n            field: 'link', headerName: 'Detail', width: 150,\n            renderCell: (params) => (\n\n                <div>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => { history.push({pathname: `/user/${params.row.id}`}) }}>\n                        View\n                    </Button>\n                </div>\n\n            ),\n\n        },\n    ];\n\n\n\n    return (\n        <div style={{ height: 400, width: '100%', marginTop: '100px', backgroundColor: 'white' }}>\n            <DataGrid rows={users} columns={columns} pageSize={5} columns={columns.map((column) => ({\n                ...column,\n                disableClickEventBubbling: true,\n            }))} />\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { Paper, Avatar, Divider, CircularProgress, Button, TextField } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\n\nexport default function User(props) {\n    const [user, setUser] = useState([])\n    const [banReason, setBanReason] = useState('')\n    const location = useLocation();\n    const [posts, setPosts] = useState([])\n    useEffect(() => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(props.match.params.id)\n            .collection(\"userPosts\")\n            .onSnapshot((snapshot) => {\n                let result = snapshot.docs.map(doc => {\n                    const data = doc.data();\n                    const id = doc.id;\n                    return { id, ...data }\n                })\n                setPosts(result)\n            })\n    }, [])\n    useEffect(() => {\n        firebase.firestore()\n            .collection(\"users\")\n            .doc(props.match.params.id)\n            .onSnapshot((snapshot) => {\n                if (snapshot.exists) {\n                    let user = snapshot.data();\n                    user.uid = snapshot.id;\n\n                    setUser(user);\n                }\n            })\n    }, [])\n\n    const banUser = () => {\n        firebase.firestore()\n            .collection(\"users\")\n            .doc(props.match.params.id)\n            .update({\n                banned: true,\n                banDetails: {\n                    banReason: banReason.target.value,\n                    date: firebase.firestore.FieldValue.serverTimestamp()\n                }\n            })\n    }\n    const unbanUser = () => {\n        firebase.firestore()\n            .collection(\"users\")\n            .doc(props.match.params.id)\n            .update({\n                banned: false,\n                banDetails: {}\n            })\n    }\n    const history = useHistory();\n    const columns = [\n        { field: 'caption', headerName: 'caption', width: 400 },\n\n        { field: 'likesCount', headerName: 'likesCount', width: 130 },\n        { field: 'commentsCount', headerName: 'commentsCount', width: 130 },\n        {\n            field: 'creation', headerName: 'creation', width: 200,\n            valueGetter: (params) =>\n                `${new Date(params.value.seconds * 1000)}`\n        },\n        {\n            field: 'link', headerName: 'Detail', width: 150,\n            renderCell: (params) => (\n                <div>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => { history.push({ pathname: `/post/${params.row.id}/${props.match.params.id}` }) }}>\n                        View\n                        </Button>\n                </div>\n            ),\n\n        },\n    ];\n\n    if (user.length == 0) {\n        return (\n            <CircularProgress\n                variant=\"indeterminate\"\n                size={40}\n                thickness={4}\n                value={100}\n            />\n        )\n    }\n    return (\n        <div className=\" row m-5\">\n\n            <Paper className=\"col-md-3 m-3\" elevation={5}>\n                <div style={{ alignItems: 'center' }} className=\"p-5 \">\n                    <Avatar style={{ height: '200px', width: '200px' }} className=\"m-auto mb-4\" alt=\"Travis Howard\" src={user.image} />\n                    <h3 style={{ textAlign: 'center' }} className=\"mt-4\">{user.name}</h3>\n                    <h6 style={{ textAlign: 'center' }}>{user.username}</h6>\n                </div>\n            </Paper>\n\n\n            <Paper className=\"col-md-8 m-3\" elevation={5}>\n                <div style={{ alignItems: 'center' }} className=\"p-5 \">\n\n                    <p style={{ textAlign: 'left', fontWeight: 'bold' }}>email</p>\n                    <p style={{ textAlign: 'left' }}>{user.email}</p>\n\n\n                    <Divider className=\"mb-3\" />\n                </div>\n            </Paper>\n\n            <Paper className=\"col-md-3 m-3 p-5\" elevation={5}>\n                {!user.banned ?\n                    <div>\n                        <TextField\n                            className=\"col-md-12\"\n                            id=\"outlined-required\"\n                            label=\"Ban Reason\"\n                            defaultValue=\"\"\n                            multiline={true}\n                            variant=\"outlined\"\n                            inputMode=\"numeric\"\n                            onChange={setBanReason}\n                        />\n\n                        <Button className=\"col-md-12 mt-5\" variant=\"contained\" color=\"secondary\" onClick={() => banUser()}>Ban</Button>\n\n                    </div>\n                    :\n                    <div>\n                        <Button className=\"col-md-12 mt-5\" variant=\"contained\" color=\"secondary\" onClick={() => unbanUser()}>Unban</Button>\n\n                    </div>\n                }\n            </Paper>\n\n            <Paper className=\"col-md-8 m-3 p-5\" elevation={5} style={{height: 400}}>\n                <DataGrid rows={posts} columns={columns} pageSize={5} columns={columns.map((column) => ({\n                    ...column,\n                    disableClickEventBubbling: true,\n                }))} />\n            </Paper>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { useLocation } from \"react-router-dom\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { Paper, Avatar, Divider, CircularProgress, Button, TextField } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport Chip from '@material-ui/core/Chip';\nimport { Clear, Check, PhotoSizeSelectLargeRounded, Markunread } from '@material-ui/icons';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { useHistory } from \"react-router-dom\";\nimport { FaBeer } from 'react-icons/fa';\n\nexport default function Post(props) {\n    const [post, setPost] = useState(null)\n    const [comments, setComments] = useState([])\n    const [loaded, setLoaded] = useState(false)\n    const location = useLocation();\n    const history = useHistory();\n\n    useEffect(() => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(props.match.params.uid)\n            .collection('userPosts')\n            .doc(props.match.params.id)\n            .onSnapshot((snapshot) => {\n                if (snapshot.exists) {\n                    let result = snapshot.data();\n                    result.id = snapshot.id;\n                    setPost(result);\n                }\n            })\n    }, [])\n\n    useEffect(() => {\n        if (post == null) {\n            return;\n        }\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(props.match.params.uid)\n            .collection(\"userPosts\")\n            .doc(props.match.params.id)\n            .collection('comments')\n            .onSnapshot((snapshot) => {\n                let result = snapshot.docs.map(doc => {\n                    const data = doc.data();\n                    const id = doc.id;\n                    return { id, ...data }\n                })\n                setComments(result)\n                setLoaded(true)\n            })\n    }, [post])\n\n    const deleteComment = (id) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(props.match.params.uid)\n            .collection(\"userPosts\")\n            .doc(props.match.params.id)\n            .collection('comments')\n            .doc(id)\n            .delete()\n    }\n    const deletePost = () => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(props.match.params.uid)\n            .collection(\"userPosts\")\n            .doc(props.match.params.id)\n            .delete()\n\n        firebase.firestore()\n            .collection(\"feed\")\n            .doc(post.id)\n            .delete()\n    }\n\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 280 },\n        { field: 'text', headerName: 'text', width: 400 },\n        {\n            field: 'delete', headerName: 'delete', width: 150,\n            renderCell: (params) => (\n\n                <div>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => { deleteComment(params.row.id) }}>\n                        Delete\n                    </Button>\n                </div>\n\n            ),\n\n        },\n        {\n            field: 'user', headerName: 'user', width: 150,\n            renderCell: (params) => (\n\n                <div>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => { history.push({ pathname: `/user/${params.row.creator}` }) }}>\n                        View\n                    </Button>\n                </div>\n\n            ),\n\n        },\n    ];\n\n    if (!loaded) {\n        return (\n            <CircularProgress\n                variant=\"indeterminate\"\n                size={40}\n                thickness={4}\n                value={100}\n            />\n        )\n    }\n    const date = new Date(post['creation'].seconds * 1000)\n    return (\n        <div className=\" row m-5\">\n            <Paper className=\"col-md-8 m-3 p-5\" elevation={5}>\n                <div style={{ alignItems: 'center' }} className=\"pb-4\">\n\n                    <p style={{ textAlign: 'left', fontWeight: 'bold' }}>Caption</p>\n                    <p style={{ textAlign: 'left' }}>{post.caption}</p>\n\n                    <Divider className=\"mb-3\" />\n                    <p style={{ textAlign: 'left', fontWeight: 'bold' }}>Date</p>\n                    <p>{date.toString()}</p>\n                </div>\n\n                <Button variant=\"contained\" color=\"primary\" className=\"mr-2 col-md-3\" href={post.downloadURL} target=\"_blank\">Open Media</Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => { deletePost() }}>\n                    Delete\n                </Button>\n            </Paper>\n\n\n            <Paper className=\"m-3\" style={{ height: 400, width: '100%', marginTop: '100px', backgroundColor: 'white' }} elevation={5}>\n                <DataGrid rows={comments} columns={columns} pageSize={5} columns={columns.map((column) => ({\n                    ...column,\n                    disableClickEventBubbling: true,\n                }))} />\n            </Paper>\n        </div>\n    )\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom'\nimport Users from './Users';\nimport User from './User';\nimport Post from './Post';\nimport { useHistory } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nexport default function Home() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n    const history = useHistory();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n    return (\n        <Router >\n\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar\n                    position=\"fixed\"\n                    className={clsx(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}\n                >\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={handleDrawerOpen}\n                            edge=\"start\"\n                            className={clsx(classes.menuButton, {\n                                [classes.hide]: open,\n                            })}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" noWrap>\n                            FreeRide Admin\n          </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    className={clsx(classes.drawer, {\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    })}\n                    classes={{\n                        paper: clsx({\n                            [classes.drawerOpen]: open,\n                            [classes.drawerClose]: !open,\n                        }),\n                    }}\n                >\n                    <div className={classes.toolbar}>\n                        <IconButton onClick={handleDrawerClose}>\n                            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <List>\n                        {['Users'].map((text, index) => (\n                            <ListItem button key={text}  >\n                                <Link style={{display: 'table'}} to={`/${text}`} >\n                                    <ListItemIcon >{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                    <ListItemText primary={text} />\n                                </Link>\n                            </ListItem>\n                        ))}\n                    </List>\n                </Drawer>\n                <main className={classes.content}>\n                    <div style={{ width: '100%', marginTop: '100px' }}>\n                        <Route path=\"/\" exact component={Users} />\n                        <Route path=\"/Users\" exact component={Users} />\n                        <Route path=\"/user/:id\" exact component={User} />\n                        <Route path=\"/post/:id/:uid\" exact component={Post} />\n                    </div>\n                </main>\n            </div>\n        </Router>\n\n    );\n}","import React, { Component, useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport firebase from 'firebase'\nimport login from './components/login'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Home from './components/Home';\n\n\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false)\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (!user) {\n        setLoggedIn(false);\n      }\n      else {\n        setLoggedIn(true);\n      }\n    })\n  }, [])\n\n  if (loggedIn) {\n    return (\n      <Home></Home>\n    )\n  }\n  return (\n    <Router >\n      <Route path=\"/\" exact component={login} />\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport firebase from 'firebase';\n\nconst firebaseConfig = require('./config/config').firebaseConfig;\nfirebase.initializeApp(firebaseConfig)\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}